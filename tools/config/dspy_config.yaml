# DSPy Consciousness Optimization Configuration
# Configuration for integrating DSPy optimization with MemMimic consciousness vault

config_version: "1.0.0"
environment: "development"

# Performance constraints and monitoring
performance:
  # Response time limits (milliseconds)
  biological_reflex_max_time: 5      # Hard limit for biological reflexes
  consciousness_pattern_max_time: 50 # Limit for consciousness operations  
  optimization_max_time: 200         # Limit for DSPy optimization
  
  # Resource limits
  max_token_budget_per_hour: 10000   # Token consumption limit
  max_concurrent_optimizations: 3    # Parallel optimization limit
  cache_size_mb: 100                 # Memory cache size limit
  
  # Circuit breaker settings
  failure_threshold: 5               # Failures before opening circuit
  recovery_timeout: 30               # Seconds before attempting recovery
  
  # Monitoring intervals
  performance_check_interval: 60     # Seconds between performance checks
  metrics_collection_interval: 10    # Seconds between metric collections

# DSPy optimization algorithm configuration
optimization:
  # MIPROv2 settings
  min_training_examples: 30          # Minimum examples for optimization
  preferred_training_examples: 300   # Preferred examples for best results
  max_bootstrapped_demos: 10         # Bootstrap examples for MIPROv2
  num_candidate_programs: 6          # Candidate programs to evaluate
  
  # Optimization scheduling
  optimization_interval_hours: 24    # Hours between optimization cycles
  max_optimization_attempts: 3       # Max attempts per pattern
  
  # Learning parameters
  confidence_threshold: 0.8          # Minimum confidence for pattern application
  improvement_threshold: 0.1         # Minimum improvement to accept optimization
  
  # Assertion settings
  max_backtrack_attempts: 2          # Max retry attempts for assertions
  assertion_timeout: 5               # Seconds before assertion timeout

# LLM model configuration for DSPy
model:
  # Primary model for optimization
  primary_model: "anthropic/claude-3-sonnet-20240229"
  
  # Fallback model for cost efficiency
  fallback_model: "anthropic/claude-3-haiku-20240307"
  
  # Model parameters
  temperature: 0.1                   # Low temperature for consistency
  max_tokens: 2048                   # Token limit per response
  
  # API configuration
  api_key_env_var: "ANTHROPIC_API_KEY"
  timeout: 30                        # Request timeout in seconds
  retry_attempts: 3                  # Number of retry attempts
  
  # Cost management
  cost_per_1k_tokens: 0.003          # Approximate cost per 1k tokens
  daily_cost_limit: 50.0             # Daily spending limit

# Integration settings with MemMimic consciousness vault
integration:
  # Feature flags - START DISABLED FOR SAFETY
  enable_dspy_optimization: false           # Master switch for DSPy
  enable_biological_reflex_optimization: false  # Biological reflex enhancement
  enable_pattern_learning: true            # Pattern learning and adaptation
  enable_assertion_validation: true        # Assertion-based validation
  
  # Integration modes
  optimization_mode: "hybrid"              # "fast_only", "optimization_only", "hybrid"
  fallback_strategy: "graceful"            # "graceful", "immediate", "disabled"
  
  # Consciousness pattern integration
  cxd_classification_enhancement: true     # Enhance CXD with DSPy
  pattern_storage_location: "amms"         # "amms", "separate", "both"
  
  # A/B testing configuration
  enable_ab_testing: true                  # Enable gradual rollout
  ab_test_percentage: 0.05                 # Conservative initial percentage
  ab_test_duration_days: 7                 # Duration of A/B test

# Environment-specific overrides
development:
  performance:
    biological_reflex_max_time: 10         # More lenient for development
    max_token_budget_per_hour: 5000       # Lower budget for development
  integration:
    enable_dspy_optimization: false        # Keep disabled until PoC validation
    ab_test_percentage: 0.01               # Very conservative for development

staging:
  performance:
    biological_reflex_max_time: 7          # Slightly more lenient than production
    max_token_budget_per_hour: 25000      # Moderate budget for staging
  integration:
    enable_dspy_optimization: true         # Enable for staging testing
    ab_test_percentage: 0.1                # Moderate testing percentage

production:
  performance:
    biological_reflex_max_time: 3          # Stricter timing for production
    max_token_budget_per_hour: 50000      # Higher budget for production
    failure_threshold: 3                   # Lower tolerance for failures
  integration:
    enable_dspy_optimization: true         # Enable for production
    optimization_mode: "hybrid"            # Hybrid mode for production
    ab_test_percentage: 0.1                # Gradual rollout
    ab_test_duration_days: 14              # Longer testing period

# Safety constraints and validation rules
safety:
  # Response time hard limits
  absolute_max_response_time: 1000       # 1 second absolute maximum
  biological_reflex_timeout: 10          # 10ms hard timeout for reflexes
  
  # Quality gates
  minimum_confidence_score: 0.6          # Minimum confidence to proceed
  maximum_error_rate: 0.05               # 5% maximum error rate
  
  # Resource protection
  memory_usage_limit: 500                # MB memory usage limit
  cpu_usage_limit: 80                    # % CPU usage limit
  
  # Assertion validation
  enable_safety_assertions: true         # Enable safety assertions
  assertion_failure_action: "fallback"   # "fallback", "halt", "log"

# Monitoring and observability
monitoring:
  # Metrics collection
  enable_detailed_metrics: true          # Collect detailed performance metrics
  metrics_retention_days: 30             # Days to retain metrics
  
  # Alerting thresholds
  response_time_alert_threshold: 100     # Alert if response time > 100ms
  error_rate_alert_threshold: 0.10       # Alert if error rate > 10%
  token_usage_alert_threshold: 0.80      # Alert if using > 80% of budget
  
  # Logging configuration
  log_level: "INFO"                      # "DEBUG", "INFO", "WARNING", "ERROR"
  log_dspy_operations: true              # Log all DSPy operations
  log_performance_metrics: true          # Log performance metrics

# Experimental features (use with caution)
experimental:
  # Advanced optimization techniques
  enable_multi_model_ensemble: false     # Use multiple models for optimization
  enable_dynamic_token_allocation: false # Dynamic token budget allocation
  enable_predictive_routing: false       # Predictive routing based on patterns
  
  # Research features
  collect_optimization_traces: false     # Collect detailed optimization traces
  enable_pattern_mining: false           # Automatic pattern discovery
  enable_consciousness_evolution: false  # Consciousness pattern evolution