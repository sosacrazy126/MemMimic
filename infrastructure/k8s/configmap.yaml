apiVersion: v1
kind: ConfigMap
metadata:
  name: memmimic-config
  namespace: memmimic
data:
  # Performance configuration
  performance_config.yaml: |
    database:
      connection_pool_size: 10
      connection_timeout: 10.0
      wal_mode: true
      cache_size: 50000
      temp_store: "MEMORY"
    
    memory:
      active_pool_size: 5000
      max_pool_size: 7500
      importance_threshold: 0.3
      auto_approve_threshold: 0.85
      auto_reject_threshold: 0.25
      duplicate_threshold: 0.9
      min_content_length: 15
      default_search_limit: 20
      max_search_limit: 200
    
    cxd:
      enable_cache_persistence: true
      rebuild_cache_on_start: false
      embedding_cache_size: 2000
      vector_index_type: "flat"
      confidence_threshold: 0.6
      similarity_threshold: 0.75
    
    tales:
      cache_size: 500
      cache_ttl_hours: 48
      backup_on_delete: true
      max_file_size_mb: 25
    
    monitoring:
      enable_performance_metrics: true
      metrics_retention_hours: 336  # 2 weeks
      target_response_time_ms: 2.0
      warning_threshold_ms: 5.0
      error_threshold_ms: 25.0
    
    async_bridge:
      shared_loop_enabled: true
      thread_pool_size: 8
      operation_timeout: 45.0
    
    logging:
      performance_logging: true
      slow_query_threshold_ms: 50.0
      log_level: "INFO"

  # Service configuration
  service_config.yaml: |
    memory_service:
      port: 8001
      workers: 6
      max_connections: 100
      timeout: 30
      
    classification_service:
      port: 8002
      workers: 4
      max_connections: 50
      timeout: 90
      model_path: /app/models
      batch_size: 16
      
    search_service:
      port: 8003
      workers: 8
      max_connections: 150
      timeout: 15
      index_path: /app/indexes
      
    tale_service:
      port: 8004
      workers: 4
      max_connections: 50
      timeout: 20
      storage_path: /app/tales
      
    consciousness_service:
      port: 8005
      workers: 3
      max_connections: 30
      timeout: 25
      cache_path: /app/consciousness_cache
      
    api_gateway:
      port: 8000
      mcp_port: 3001
      workers: 6
      max_connections: 200
      timeout: 60

  # Sharding configuration
  sharding_config.yaml: |
    coordinator:
      host: postgres-coordinator
      port: 5432
      database: memmimic
      pool_size: 20
      max_overflow: 30
      
    shards:
      - shard_id: 1
        name: "shard-001"
        host: postgres-shard-1
        port: 5432
        database: memmimic_shard_1
        pool_size: 15
        replica_host: postgres-shard-1-replica
        
      - shard_id: 2
        name: "shard-002"
        host: postgres-shard-2
        port: 5432
        database: memmimic_shard_2
        pool_size: 15
        replica_host: postgres-shard-2-replica
        
      - shard_id: 3
        name: "shard-003"
        host: postgres-shard-3
        port: 5432
        database: memmimic_shard_3
        pool_size: 15
        replica_host: postgres-shard-3-replica
        
      - shard_id: 4
        name: "shard-004"
        host: postgres-shard-4
        port: 5432
        database: memmimic_shard_4
        pool_size: 15
        replica_host: postgres-shard-4-replica
    
    replication:
      enabled: true
      sync_mode: async
      lag_threshold_mb: 100
      health_check_interval: 30

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: memmimic
data:
  nginx.conf: |
    upstream api_gateway {
        least_conn;
        server api-gateway:8000 max_fails=3 fail_timeout=30s;
    }
    
    upstream mcp_server {
        least_conn;
        server api-gateway:3001 max_fails=3 fail_timeout=30s;
    }
    
    server {
        listen 80;
        server_name _;
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
        }
        
        # API Gateway proxy
        location / {
            proxy_pass http://api_gateway;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 5s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }
        
        # MCP Server proxy
        location /mcp/ {
            proxy_pass http://mcp_server/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: memmimic
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
    
    rule_files: []
    
    scrape_configs:
      - job_name: 'memmimic-services'
        static_configs:
          - targets: 
            - 'memory-service:8001'
            - 'classification-service:8002'
            - 'search-service:8003'
            - 'tale-service:8004'
            - 'consciousness-service:8005'
            - 'api-gateway:8000'
        metrics_path: /metrics
        scrape_interval: 10s
        
      - job_name: 'postgres-coordinator'
        static_configs:
          - targets: ['postgres-coordinator:9187']
        scrape_interval: 30s
        
      - job_name: 'postgres-shards'
        static_configs:
          - targets: 
            - 'postgres-shard-1:9187'
            - 'postgres-shard-2:9187'
            - 'postgres-shard-3:9187'
            - 'postgres-shard-4:9187'
        scrape_interval: 30s
        
      - job_name: 'redis'
        static_configs:
          - targets: ['redis:9121']
        scrape_interval: 30s