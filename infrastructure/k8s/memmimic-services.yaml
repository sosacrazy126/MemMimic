# Memory Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: memory-service
  namespace: memmimic
  labels:
    app: memory-service
    component: service
    tier: backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: memory-service
  template:
    metadata:
      labels:
        app: memory-service
        component: service
        tier: backend
    spec:
      serviceAccountName: memmimic-service-account
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: memory-service
        image: memmimic/memory-service:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8001
          name: http
        - containerPort: 9090
          name: metrics
        env:
        - name: SERVICE_NAME
          value: memory-service
        - name: SERVICE_PORT
          value: "8001"
        - name: DATABASE_URL
          value: "postgresql://memmimic:$(DB_PASSWORD)@postgres-coordinator:5432/memmimic"
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: memmimic-secrets
              key: db_password
        - name: REDIS_URL
          value: "redis://:$(REDIS_PASSWORD)@redis:6379/0"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: memmimic-secrets
              key: redis_password
        volumeMounts:
        - name: config
          mountPath: /app/config
        - name: temp-storage
          mountPath: /tmp
        resources:
          requests:
            cpu: 300m
            memory: 512Mi
          limits:
            cpu: 1
            memory: 1Gi
        readinessProbe:
          httpGet:
            path: /health
            port: 8001
          initialDelaySeconds: 30
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: 8001
          initialDelaySeconds: 60
          periodSeconds: 30
      volumes:
      - name: config
        configMap:
          name: memmimic-config
      - name: temp-storage
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: memory-service
  namespace: memmimic
  labels:
    app: memory-service
    component: service
spec:
  selector:
    app: memory-service
  ports:
  - name: http
    port: 8001
    targetPort: 8001
  - name: metrics
    port: 9090
    targetPort: 9090
  type: ClusterIP

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: memory-service-hpa
  namespace: memmimic
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: memory-service
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15

---
# Classification Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: classification-service
  namespace: memmimic
  labels:
    app: classification-service
    component: service
    tier: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: classification-service
  template:
    metadata:
      labels:
        app: classification-service
        component: service
        tier: backend
    spec:
      serviceAccountName: memmimic-service-account
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: classification-service
        image: memmimic/classification-service:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8002
          name: http
        - containerPort: 9090
          name: metrics
        env:
        - name: SERVICE_NAME
          value: classification-service
        - name: SERVICE_PORT
          value: "8002"
        - name: REDIS_URL
          value: "redis://:$(REDIS_PASSWORD)@redis:6379/1"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: memmimic-secrets
              key: redis_password
        - name: MODEL_PATH
          value: /app/models
        volumeMounts:
        - name: config
          mountPath: /app/config
        - name: models
          mountPath: /app/models
        - name: temp-storage
          mountPath: /tmp
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 2
            memory: 3Gi
        readinessProbe:
          httpGet:
            path: /health
            port: 8002
          initialDelaySeconds: 60
          periodSeconds: 15
        livenessProbe:
          httpGet:
            path: /health
            port: 8002
          initialDelaySeconds: 120
          periodSeconds: 30
      volumes:
      - name: config
        configMap:
          name: memmimic-config
      - name: models
        persistentVolumeClaim:
          claimName: classification-models-pvc
      - name: temp-storage
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: classification-service
  namespace: memmimic
  labels:
    app: classification-service
    component: service
spec:
  selector:
    app: classification-service
  ports:
  - name: http
    port: 8002
    targetPort: 8002
  - name: metrics
    port: 9090
    targetPort: 9090
  type: ClusterIP

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: classification-service-hpa
  namespace: memmimic
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: classification-service
  minReplicas: 2
  maxReplicas: 6
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 75
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 85

---
# Search Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: search-service
  namespace: memmimic
  labels:
    app: search-service
    component: service
    tier: backend
spec:
  replicas: 4
  selector:
    matchLabels:
      app: search-service
  template:
    metadata:
      labels:
        app: search-service
        component: service
        tier: backend
    spec:
      serviceAccountName: memmimic-service-account
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: search-service
        image: memmimic/search-service:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8003
          name: http
        - containerPort: 9090
          name: metrics
        env:
        - name: SERVICE_NAME
          value: search-service
        - name: SERVICE_PORT
          value: "8003"
        - name: DATABASE_URL
          value: "postgresql://memmimic:$(DB_PASSWORD)@postgres-coordinator:5432/memmimic"
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: memmimic-secrets
              key: db_password
        - name: REDIS_URL
          value: "redis://:$(REDIS_PASSWORD)@redis:6379/2"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: memmimic-secrets
              key: redis_password
        - name: VECTOR_INDEX_PATH
          value: /app/indexes
        volumeMounts:
        - name: config
          mountPath: /app/config
        - name: indexes
          mountPath: /app/indexes
        - name: temp-storage
          mountPath: /tmp
        resources:
          requests:
            cpu: 400m
            memory: 768Mi
          limits:
            cpu: 1.5
            memory: 2Gi
        readinessProbe:
          httpGet:
            path: /health
            port: 8003
          initialDelaySeconds: 30
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: 8003
          initialDelaySeconds: 60
          periodSeconds: 30
      volumes:
      - name: config
        configMap:
          name: memmimic-config
      - name: indexes
        persistentVolumeClaim:
          claimName: search-indexes-pvc
      - name: temp-storage
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: search-service
  namespace: memmimic
  labels:
    app: search-service
    component: service
spec:
  selector:
    app: search-service
  ports:
  - name: http
    port: 8003
    targetPort: 8003
  - name: metrics
    port: 9090
    targetPort: 9090
  type: ClusterIP

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: search-service-hpa
  namespace: memmimic
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: search-service
  minReplicas: 3
  maxReplicas: 15
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 65
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 75

---
# PersistentVolumeClaims for Services
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: classification-models-pvc
  namespace: memmimic
spec:
  accessModes:
  - ReadWriteMany
  storageClassName: fast-ssd
  resources:
    requests:
      storage: 50Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: search-indexes-pvc
  namespace: memmimic
spec:
  accessModes:
  - ReadWriteMany
  storageClassName: fast-ssd
  resources:
    requests:
      storage: 100Gi