# API Gateway Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: memmimic
  labels:
    app: api-gateway
    component: gateway
    tier: frontend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
        component: gateway
        tier: frontend
    spec:
      serviceAccountName: memmimic-service-account
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: api-gateway
        image: memmimic/api-gateway:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8000
          name: http
        - containerPort: 3001
          name: mcp
        - containerPort: 9090
          name: metrics
        env:
        - name: SERVICE_NAME
          value: api-gateway
        - name: SERVICE_PORT
          value: "8000"
        - name: MCP_SERVER_PORT
          value: "3001"
        - name: MEMORY_SERVICE_URL
          value: "http://memory-service:8001"
        - name: CLASSIFICATION_SERVICE_URL
          value: "http://classification-service:8002"
        - name: SEARCH_SERVICE_URL
          value: "http://search-service:8003"
        - name: TALE_SERVICE_URL
          value: "http://tale-service:8004"
        - name: CONSCIOUSNESS_SERVICE_URL
          value: "http://consciousness-service:8005"
        - name: REDIS_URL
          value: "redis://:$(REDIS_PASSWORD)@redis:6379/4"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: memmimic-secrets
              key: redis_password
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: memmimic-secrets
              key: jwt_secret
        volumeMounts:
        - name: config
          mountPath: /app/config
        - name: temp-storage
          mountPath: /tmp
        resources:
          requests:
            cpu: 400m
            memory: 512Mi
          limits:
            cpu: 1.5
            memory: 1.5Gi
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 30
      volumes:
      - name: config
        configMap:
          name: memmimic-config
      - name: temp-storage
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: api-gateway
  namespace: memmimic
  labels:
    app: api-gateway
    component: gateway
spec:
  selector:
    app: api-gateway
  ports:
  - name: http
    port: 8000
    targetPort: 8000
  - name: mcp
    port: 3001
    targetPort: 3001
  - name: metrics
    port: 9090
    targetPort: 9090
  type: ClusterIP

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: api-gateway-hpa
  namespace: memmimic
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: api-gateway
  minReplicas: 3
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 60
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 70
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 25
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 30
      policies:
      - type: Percent
        value: 200
        periodSeconds: 15

---
# Load Balancer (Nginx)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-lb
  namespace: memmimic
  labels:
    app: nginx-lb
    component: loadbalancer
    tier: frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx-lb
  template:
    metadata:
      labels:
        app: nginx-lb
        component: loadbalancer
        tier: frontend
    spec:
      serviceAccountName: memmimic-service-account
      containers:
      - name: nginx
        image: nginx:alpine
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
          name: http
        - containerPort: 443
          name: https
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/conf.d
        - name: tls-certs
          mountPath: /etc/nginx/certs
        resources:
          requests:
            cpu: 200m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 15
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-config
      - name: tls-certs
        secret:
          secretName: tls-certificates

---
apiVersion: v1
kind: Service
metadata:
  name: nginx-lb
  namespace: memmimic
  labels:
    app: nginx-lb
    component: loadbalancer
spec:
  selector:
    app: nginx-lb
  ports:
  - name: http
    port: 80
    targetPort: 80
  - name: https
    port: 443
    targetPort: 443
  type: LoadBalancer
  loadBalancerSourceRanges:
  - 0.0.0.0/0  # Restrict this in production

---
# Ingress Controller
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: memmimic-ingress
  namespace: memmimic
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    nginx.ingress.kubernetes.io/rate-limit: "1000"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - memmimic.yourdomain.com
    - api.memmimic.yourdomain.com
    - mcp.memmimic.yourdomain.com
    secretName: memmimic-tls
  rules:
  - host: memmimic.yourdomain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: api-gateway
            port:
              number: 8000
  - host: api.memmimic.yourdomain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: api-gateway
            port:
              number: 8000
  - host: mcp.memmimic.yourdomain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: api-gateway
            port:
              number: 3001

---
# Network Policy for API Gateway
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: api-gateway-netpol
  namespace: memmimic
spec:
  podSelector:
    matchLabels:
      app: api-gateway
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: nginx-lb
    - namespaceSelector: {}
    ports:
    - protocol: TCP
      port: 8000
    - protocol: TCP
      port: 3001
  egress:
  - to:
    - podSelector:
        matchLabels:
          component: service
    ports:
    - protocol: TCP
      port: 8001
    - protocol: TCP
      port: 8002
    - protocol: TCP
      port: 8003
    - protocol: TCP
      port: 8004
    - protocol: TCP
      port: 8005
  - to:
    - podSelector:
        matchLabels:
          app: redis-master
    ports:
    - protocol: TCP
      port: 6379
  - {} # Allow all other egress for external dependencies