# PostgreSQL Coordinator (Main Database)
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres-coordinator
  namespace: memmimic
  labels:
    app: postgres-coordinator
    component: database
spec:
  serviceName: postgres-coordinator
  replicas: 1
  selector:
    matchLabels:
      app: postgres-coordinator
  template:
    metadata:
      labels:
        app: postgres-coordinator
        component: database
    spec:
      serviceAccountName: memmimic-service-account
      securityContext:
        fsGroup: 999
      containers:
      - name: postgres
        image: postgres:15-alpine
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5432
          name: postgres
        env:
        - name: POSTGRES_DB
          value: memmimic
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: password
        - name: POSTGRES_REPLICATION_MODE
          value: master
        - name: POSTGRES_REPLICATION_USER
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: replication_username
        - name: POSTGRES_REPLICATION_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: replication_password
        args:
        - postgres
        - -c
        - wal_level=replica
        - -c
        - max_wal_senders=10
        - -c
        - max_replication_slots=10
        - -c
        - hot_standby=on
        - -c
        - shared_preload_libraries=pg_stat_statements
        - -c
        - max_connections=200
        - -c
        - effective_cache_size=1GB
        - -c
        - maintenance_work_mem=256MB
        - -c
        - checkpoint_completion_target=0.9
        - -c
        - wal_buffers=16MB
        resources:
          requests:
            cpu: 500m
            memory: 2Gi
          limits:
            cpu: 2
            memory: 4Gi
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
        - name: postgres-init
          mountPath: /docker-entrypoint-initdb.d
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - memmimic
            - -d
            - memmimic
          initialDelaySeconds: 30
          periodSeconds: 10
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - memmimic
            - -d
            - memmimic
          initialDelaySeconds: 60
          periodSeconds: 30
      - name: postgres-exporter
        image: quay.io/prometheuscommunity/postgres-exporter:latest
        ports:
        - containerPort: 9187
          name: metrics
        env:
        - name: DATA_SOURCE_NAME
          value: "postgresql://memmimic:$(POSTGRES_PASSWORD)@localhost:5432/memmimic?sslmode=disable"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: password
        resources:
          requests:
            cpu: 50m
            memory: 64Mi
          limits:
            cpu: 200m
            memory: 256Mi
      volumes:
      - name: postgres-init
        configMap:
          name: postgres-init-scripts
  volumeClaimTemplates:
  - metadata:
      name: postgres-data
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: fast-ssd
      resources:
        requests:
          storage: 100Gi

---
apiVersion: v1
kind: Service
metadata:
  name: postgres-coordinator
  namespace: memmimic
  labels:
    app: postgres-coordinator
    component: database
spec:
  selector:
    app: postgres-coordinator
  ports:
  - name: postgres
    port: 5432
    targetPort: 5432
  - name: metrics
    port: 9187
    targetPort: 9187
  clusterIP: None

---
# PostgreSQL Shards (4 shards)
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres-shard-1
  namespace: memmimic
  labels:
    app: postgres-shard-1
    component: database
    shard: "1"
spec:
  serviceName: postgres-shard-1
  replicas: 1
  selector:
    matchLabels:
      app: postgres-shard-1
  template:
    metadata:
      labels:
        app: postgres-shard-1
        component: database
        shard: "1"
    spec:
      serviceAccountName: memmimic-service-account
      securityContext:
        fsGroup: 999
      containers:
      - name: postgres
        image: postgres:15-alpine
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5432
          name: postgres
        env:
        - name: POSTGRES_DB
          value: memmimic_shard_1
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: password
        args:
        - postgres
        - -c
        - max_connections=150
        - -c
        - effective_cache_size=768MB
        - -c
        - maintenance_work_mem=192MB
        - -c
        - shared_preload_libraries=pg_stat_statements
        resources:
          requests:
            cpu: 300m
            memory: 1.5Gi
          limits:
            cpu: 1.5
            memory: 3Gi
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
        - name: postgres-init
          mountPath: /docker-entrypoint-initdb.d
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - memmimic
            - -d
            - memmimic_shard_1
          initialDelaySeconds: 30
          periodSeconds: 10
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - memmimic
            - -d
            - memmimic_shard_1
          initialDelaySeconds: 60
          periodSeconds: 30
      - name: postgres-exporter
        image: quay.io/prometheuscommunity/postgres-exporter:latest
        ports:
        - containerPort: 9187
          name: metrics
        env:
        - name: DATA_SOURCE_NAME
          value: "postgresql://memmimic:$(POSTGRES_PASSWORD)@localhost:5432/memmimic_shard_1?sslmode=disable"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: password
        resources:
          requests:
            cpu: 50m
            memory: 64Mi
          limits:
            cpu: 200m
            memory: 256Mi
      volumes:
      - name: postgres-init
        configMap:
          name: postgres-init-scripts
  volumeClaimTemplates:
  - metadata:
      name: postgres-data
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: fast-ssd
      resources:
        requests:
          storage: 75Gi

---
apiVersion: v1
kind: Service
metadata:
  name: postgres-shard-1
  namespace: memmimic
  labels:
    app: postgres-shard-1
    component: database
    shard: "1"
spec:
  selector:
    app: postgres-shard-1
  ports:
  - name: postgres
    port: 5432
    targetPort: 5432
  - name: metrics
    port: 9187
    targetPort: 9187
  clusterIP: None

---
# Additional shards (2, 3, 4) - Similar structure
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres-shard-2
  namespace: memmimic
  labels:
    app: postgres-shard-2
    component: database
    shard: "2"
spec:
  serviceName: postgres-shard-2
  replicas: 1
  selector:
    matchLabels:
      app: postgres-shard-2
  template:
    metadata:
      labels:
        app: postgres-shard-2
        component: database
        shard: "2"
    spec:
      serviceAccountName: memmimic-service-account
      securityContext:
        fsGroup: 999
      containers:
      - name: postgres
        image: postgres:15-alpine
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5432
          name: postgres
        env:
        - name: POSTGRES_DB
          value: memmimic_shard_2
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: password
        args:
        - postgres
        - -c
        - max_connections=150
        - -c
        - effective_cache_size=768MB
        - -c
        - maintenance_work_mem=192MB
        - -c
        - shared_preload_libraries=pg_stat_statements
        resources:
          requests:
            cpu: 300m
            memory: 1.5Gi
          limits:
            cpu: 1.5
            memory: 3Gi
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
        - name: postgres-init
          mountPath: /docker-entrypoint-initdb.d
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - memmimic
            - -d
            - memmimic_shard_2
          initialDelaySeconds: 30
          periodSeconds: 10
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - memmimic
            - -d
            - memmimic_shard_2
          initialDelaySeconds: 60
          periodSeconds: 30
      - name: postgres-exporter
        image: quay.io/prometheuscommunity/postgres-exporter:latest
        ports:
        - containerPort: 9187
          name: metrics
        env:
        - name: DATA_SOURCE_NAME
          value: "postgresql://memmimic:$(POSTGRES_PASSWORD)@localhost:5432/memmimic_shard_2?sslmode=disable"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: password
        resources:
          requests:
            cpu: 50m
            memory: 64Mi
          limits:
            cpu: 200m
            memory: 256Mi
      volumes:
      - name: postgres-init
        configMap:
          name: postgres-init-scripts
  volumeClaimTemplates:
  - metadata:
      name: postgres-data
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: fast-ssd
      resources:
        requests:
          storage: 75Gi

---
apiVersion: v1
kind: Service
metadata:
  name: postgres-shard-2
  namespace: memmimic
  labels:
    app: postgres-shard-2
    component: database
    shard: "2"
spec:
  selector:
    app: postgres-shard-2
  ports:
  - name: postgres
    port: 5432
    targetPort: 5432
  - name: metrics
    port: 9187
    targetPort: 9187
  clusterIP: None

---
# ConfigMap for PostgreSQL initialization scripts
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-init-scripts
  namespace: memmimic
data:
  01-init-sharding.sql: |
    -- Enable required extensions
    CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
    CREATE EXTENSION IF NOT EXISTS "pg_trgm";
    CREATE EXTENSION IF NOT EXISTS "btree_gin";
    CREATE EXTENSION IF NOT EXISTS "pg_stat_statements";
    
    -- Create initial schema
    \i /tmp/schema.sql