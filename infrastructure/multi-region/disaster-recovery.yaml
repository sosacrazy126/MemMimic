# MemMimic Disaster Recovery Configuration
# Multi-region failover and data replication

apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: memmimic-dr-orchestrator
  namespace: argocd
spec:
  project: default
  source:
    repoURL: https://github.com/your-org/memmimic
    targetRevision: main
    path: infrastructure/k8s
  destination:
    server: https://kubernetes.default.svc
    namespace: memmimic
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
    - CreateNamespace=true

---
# Disaster Recovery CronJob
apiVersion: batch/v1
kind: CronJob
metadata:
  name: dr-health-check
  namespace: memmimic
spec:
  schedule: "*/5 * * * *"  # Every 5 minutes
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          serviceAccountName: memmimic-service-account
          containers:
          - name: dr-health-check
            image: memmimic/dr-orchestrator:latest
            imagePullPolicy: Always
            env:
            - name: PRIMARY_REGION
              value: "us-west-2"
            - name: SECONDARY_REGION
              value: "us-east-1"
            - name: TERTIARY_REGION
              value: "eu-west-1"
            - name: FAILOVER_THRESHOLD
              value: "3"  # Number of consecutive failures before failover
            - name: PROMETHEUS_URL
              value: "http://prometheus:9090"
            - name: ALERT_WEBHOOK
              valueFrom:
                secretKeyRef:
                  name: memmimic-secrets
                  key: alert_webhook_url
            command:
            - python
            - /app/dr_health_check.py
            resources:
              requests:
                cpu: 100m
                memory: 128Mi
              limits:
                cpu: 500m
                memory: 256Mi

---
# PostgreSQL Cross-Region Replication Setup
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: postgres-primary-replica
  namespace: memmimic
spec:
  instances: 1
  primaryUpdateStrategy: unsupervised
  
  postgresql:
    parameters:
      wal_level: "replica"
      max_wal_senders: "10"
      max_replication_slots: "10"
      hot_standby: "on"
      archive_mode: "on"
      archive_command: "aws s3 cp %p s3://memmimic-backups-us-west-2/wal-archive/%f"
      
  backup:
    retentionPolicy: "30d"
    barmanObjectStore:
      destinationPath: "s3://memmimic-backups-us-west-2/postgresql-backups"
      s3Credentials:
        accessKeyId:
          name: postgres-backup-credentials
          key: ACCESS_KEY_ID
        secretAccessKey:
          name: postgres-backup-credentials
          key: SECRET_ACCESS_KEY
        region:
          name: postgres-backup-credentials
          key: REGION
      wal:
        retention: "7d"
        
  monitoring:
    enabled: true
    
  resources:
    requests:
      memory: "4Gi"
      cpu: "1"
    limits:
      memory: "8Gi"
      cpu: "2"

---
# Cross-Region Service Monitor for Prometheus Federation
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: memmimic-cross-region-monitor
  namespace: memmimic
spec:
  selector:
    matchLabels:
      app: memmimic-federation
  endpoints:
  - port: metrics
    interval: 30s
    path: /federate
    params:
      'match[]':
      - '{job=~"memmimic-.*"}'
      - '{__name__=~"memmimic_.*"}'
    relabelings:
    - sourceLabels: [__address__]
      targetLabel: region
      replacement: us-west-2

---
# External DNS for Cross-Region Failover
apiVersion: externaldns.k8s.io/v1alpha1
kind: DNSEndpoint
metadata:
  name: memmimic-failover-dns
  namespace: memmimic
spec:
  endpoints:
  - dnsName: api.memmimic.com
    recordType: A
    recordTTL: 60
    targets:
    - us-west-2.elb.amazonaws.com
    - us-east-1.elb.amazonaws.com
    providerSpecific:
    - name: aws-health-check-id
      value: "primary-health-check"
    - name: aws-failover
      value: "PRIMARY"
  - dnsName: api-dr.memmimic.com
    recordType: A
    recordTTL: 60
    targets:
    - us-east-1.elb.amazonaws.com
    providerSpecific:
    - name: aws-health-check-id
      value: "secondary-health-check"
    - name: aws-failover
      value: "SECONDARY"

---
# Velero Backup Schedule for Cross-Region Recovery
apiVersion: velero.io/v1
kind: Schedule
metadata:
  name: memmimic-cross-region-backup
  namespace: velero
spec:
  schedule: "0 2 * * *"  # Daily at 2 AM
  template:
    includedNamespaces:
    - memmimic
    excludedResources:
    - events
    - events.events.k8s.io
    storageLocation: cross-region
    volumeSnapshotLocations:
    - cross-region-snapshots
    ttl: 720h  # 30 days
    metadata:
      labels:
        backup-type: "cross-region"
        region: "us-west-2"

---
# Disaster Recovery ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: dr-config
  namespace: memmimic
data:
  dr-config.yaml: |
    disaster_recovery:
      regions:
        primary:
          name: "us-west-2"
          cluster_endpoint: "https://kubernetes-primary.memmimic.com"
          database_endpoint: "postgres-coordinator.memmimic.svc.cluster.local:5432"
          priority: 1
          
        secondary:
          name: "us-east-1"
          cluster_endpoint: "https://kubernetes-secondary.memmimic.com"
          database_endpoint: "postgres-coordinator-dr.memmimic.svc.cluster.local:5432"
          priority: 2
          
        tertiary:
          name: "eu-west-1"
          cluster_endpoint: "https://kubernetes-tertiary.memmimic.com"
          database_endpoint: "postgres-coordinator-eu.memmimic.svc.cluster.local:5432"
          priority: 3
          
      failover:
        health_check_interval: 30  # seconds
        failure_threshold: 3       # consecutive failures
        recovery_threshold: 2      # consecutive successes
        dns_ttl: 60               # DNS TTL for fast failover
        
      data_replication:
        postgresql:
          replication_lag_threshold: "10MB"
          backup_interval: "6h"
          retention_days: 30
          
        kubernetes:
          backup_interval: "24h"
          retention_days: 7
          
        s3:
          cross_region_replication: true
          replication_delay_threshold: "15min"
          
      notifications:
        slack_webhook: "${SLACK_WEBHOOK_URL}"
        email_recipients:
        - "ops-team@memmimic.com"
        - "cto@memmimic.com"
        
      runbooks:
        primary_failure: |
          1. Verify primary region is actually down (check multiple endpoints)
          2. Promote secondary region to primary
          3. Update DNS to point to secondary region
          4. Restore data from latest cross-region backup if needed
          5. Notify stakeholders of failover
          6. Monitor secondary region performance
          
        data_corruption: |
          1. Identify scope of data corruption
          2. Stop all write operations immediately
          3. Identify last known good backup
          4. Restore from backup to staging environment
          5. Validate data integrity in staging
          6. Perform coordinated restore to production
          7. Resume operations and validate functionality
          
        network_partition: |
          1. Identify affected regions/zones
          2. Assess data consistency across regions
          3. Determine which region has most recent consistent state
          4. Temporarily disable affected regions
          5. Route all traffic to healthy regions
          6. Restore connectivity and sync data
          7. Gradually re-enable affected regions

---
# Multi-Region Service Mesh (Istio)
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: memmimic-cross-region
  namespace: memmimic
spec:
  host: api-gateway.memmimic.svc.cluster.local
  trafficPolicy:
    outlierDetection:
      consecutiveGatewayErrors: 3
      interval: 30s
      baseEjectionTime: 30s
      maxEjectionPercent: 50
    circuitBreaker:
      connectionPool:
        tcp:
          maxConnections: 100
        http:
          http1MaxPendingRequests: 50
          maxRequestsPerConnection: 10
      outlierDetection:
        consecutiveErrors: 3
  portLevelSettings:
  - port:
      number: 8000
    connectionPool:
      tcp:
        maxConnections: 50

---
# Cross-Region Virtual Service for Failover
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: memmimic-cross-region-failover
  namespace: memmimic
spec:
  hosts:
  - api.memmimic.com
  gateways:
  - memmimic-gateway
  http:
  - match:
    - headers:
        x-region:
          exact: us-west-2
    route:
    - destination:
        host: api-gateway.memmimic.svc.cluster.local
        port:
          number: 8000
    timeout: 30s
    retries:
      attempts: 3
      perTryTimeout: 10s
      retryOn: gateway-error,connect-failure,refused-stream
  - route:
    - destination:
        host: api-gateway-dr.us-east-1.memmimic.com
        port:
          number: 8000
    fault:
      abort:
        percentage:
          value: 0.1  # 0.1% failure injection for testing
        httpStatus: 503